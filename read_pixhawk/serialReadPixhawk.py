from pymavlink import mavutil

# --- CONFIGURATION ---
PORT = "/dev/ttyACM0"  # Change selon ton port (ex: /dev/ttyUSB0 ou COM3 sous Windows)
BAUDRATE = 115200  # Vitesse de communication

# Connexion √† la Pixhawk
print(f"Connexion √† {PORT} en {BAUDRATE} bauds...")
master = mavutil.mavlink_connection(PORT, baud=BAUDRATE)

# Attendre un heartbeat pour s'assurer que la connexion est √©tablie
print("Attente du heartbeat de la Pixhawk...")
master.wait_heartbeat()
print("‚úÖ Connexion √©tablie avec la Pixhawk!")

# --- DEMANDER LES FLUX DE DONN√âES ---
# Activer l'envoi des donn√©es IMU brutes
master.mav.request_data_stream_send(
    master.target_system, master.target_component,
    mavutil.mavlink.MAV_DATA_STREAM_RAW_SENSORS,  # Donn√©es IMU brutes
    10,  # Fr√©quence de 10 Hz
    1  # Activer (1) ou d√©sactiver (0)
)

# Activer l'envoi des donn√©es de statut √©tendu
master.mav.request_data_stream_send(
    master.target_system, master.target_component,
    mavutil.mavlink.MAV_DATA_STREAM_EXTENDED_STATUS,
    10,
    1
)

print("üì° Attente des donn√©es IMU...")

while True:
    # R√©cup√©ration des messages MAVLink
    msg = master.recv_match(type=['RAW_IMU', 'SCALED_IMU2', 'SCALED_IMU3', 'ATTITUDE'], blocking=True)

    if msg:
        msg_type = msg.get_type()

        if msg_type in ['RAW_IMU', 'SCALED_IMU2', 'SCALED_IMU3']:
            print(f"üìä {msg_type} - Acc√©l√©ration: x={msg.xacc}, y={msg.yacc}, z={msg.zacc}")
            print(f"üîÑ Gyroscope: x={msg.xgyro}, y={msg.ygyro}, z={msg.zgyro}")
            print(f"üß≠ Magn√©tom√®tre: x={msg.xmag}, y={msg.ymag}, z={msg.zmag}")
        
        elif msg_type == 'ATTITUDE':
            print(f"üéõÔ∏è ATTITUDE - Roll={msg.roll:.2f}, Pitch={msg.pitch:.2f}, Yaw={msg.yaw:.2f}")

        print("-" * 50)
